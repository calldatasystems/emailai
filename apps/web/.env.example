# ===================================================================
# DATABASE
# ===================================================================
DATABASE_URL="postgresql://postgres:password@localhost:5432/emailai?schema=public"
DIRECT_URL="postgresql://postgres:password@localhost:5432/emailai?schema=public"

# ===================================================================
# AUTHENTICATION & DOMAIN CONFIGURATION
# ===================================================================
NEXTAUTH_SECRET= # Generate a random secret here: https://generate-secret.vercel.app/32

# Domain configuration for calldata.app structure:
# - Local development: http://localhost:3000
# - Production: https://emailai.calldata.app
NEXTAUTH_URL=http://localhost:3000

# Gmail OAuth Configuration
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_ENCRYPT_SECRET= # openssl rand -hex 32
GOOGLE_ENCRYPT_SALT= # openssl rand -hex 16

# Google PubSub for real-time email updates
GOOGLE_PUBSUB_TOPIC_NAME="projects/abc/topics/xyz"
GOOGLE_PUBSUB_VERIFICATION_TOKEN= # Generate a random secret here: https://generate-secret.vercel.app/32

# Google OAuth Redirect URIs:
# - Local: http://localhost:3000/api/auth/callback/google
# - Production: https://emailai.calldata.app/api/auth/callback/google

# ===================================================================
# AI / LLM CONFIGURATION
# ===================================================================
DEFAULT_LLM_PROVIDER=openai

# Cloud AI Providers (set at least one):
# ANTHROPIC_API_KEY=
# OPENROUTER_API_KEY=
# OPENAI_API_KEY=
# GOOGLE_API_KEY=
# GROQ_API_KEY=
# BEDROCK_ACCESS_KEY=
# BEDROCK_SECRET_KEY=
# BEDROCK_REGION=us-west-2

# Ollama (Local AI) - Recommended for cost savings and privacy
# Deploy Ollama on shared AI infrastructure using scripts in ollama-server/
# See ollama-server/README.md and ollama-server/docs/VASTAI_DEPLOYMENT.md

# Production domain structure:
# OLLAMA_BASE_URL=https://ai.calldata.app/api           # Shared AI server for all calldata.app products
# NEXT_PUBLIC_OLLAMA_MODEL=llama3.3:70b                 # Production (requires 48GB+ VRAM)

# Development configurations:
# Format: http://HOST:PORT/api
# OLLAMA_BASE_URL=http://localhost:11434/api            # Local development
# OLLAMA_BASE_URL=http://your-server-ip:11434/api      # Remote server
# OLLAMA_BASE_URL=http://HOST:PORT/api                 # Vast.ai: Get HOST:PORT from instance port forwarding (use EXTERNAL port, NOT internal 11434)
# NEXT_PUBLIC_OLLAMA_MODEL=llama3.1:8b                 # Development (8GB+ VRAM)
# NEXT_PUBLIC_OLLAMA_MODEL=phi3                        # Lightweight (4GB+ VRAM)

# Fine-tuned user models (after running fine-tuning scripts):
# NEXT_PUBLIC_OLLAMA_MODEL=emailai-user123             # User-specific fine-tuned model

# Economy LLM (for large context tasks where cost efficiency matters)
# Use cheaper/faster models for email history analysis or knowledge base processing
# ECONOMY_LLM_PROVIDER=groq                            # Groq for economy tasks
# ECONOMY_LLM_MODEL=llama-3.3-70b-versatile            # Groq Llama 3.3 70B
# ECONOMY_LLM_PROVIDER=ollama                          # Or use Ollama for economy
# ECONOMY_LLM_MODEL=llama3.1:8b                        # Smaller/faster model

# ===================================================================
# API KEYS & SECURITY
# ===================================================================
INTERNAL_API_KEY= # Generate a random secret here: https://generate-secret.vercel.app/32
API_KEY_SALT= # Generate a random secret here: https://generate-secret.vercel.app/32

# ===================================================================
# REDIS / CACHE CONFIGURATION
# ===================================================================
# Local development
UPSTASH_REDIS_URL="http://localhost:8079"
UPSTASH_REDIS_TOKEN= # Generate a random secret here: https://generate-secret.vercel.app/32

# Production (if using shared cache infrastructure)
# UPSTASH_REDIS_URL="https://cache.calldata.app"
# UPSTASH_REDIS_TOKEN=your-token

REDIS_URL= # used for subscriptions: rediss://:password@host:port
QSTASH_TOKEN=
QSTASH_CURRENT_SIGNING_KEY=
QSTASH_NEXT_SIGNING_KEY=

# Optional:

NEXT_PUBLIC_APP_HOME_PATH=/automation # If you want the product to default to email client, set this to /mail
LOG_ZOD_ERRORS=true
CRON_SECRET=

# Tinybird
TINYBIRD_TOKEN=
TINYBIRD_BASE_URL=https://api.us-east.tinybird.co/
TINYBIRD_ENCRYPT_SECRET= # openssl rand -hex 32
TINYBIRD_ENCRYPT_SALT= # openssl rand -hex 16

# Sentry (error tracking)
SENTRY_AUTH_TOKEN=
SENTRY_ORGANIZATION=
SENTRY_PROJECT=
NEXT_PUBLIC_SENTRY_DSN=

# Axiom (logging)
NEXT_PUBLIC_AXIOM_DATASET=
NEXT_PUBLIC_AXIOM_TOKEN=

# PostHog (analytics)
NEXT_PUBLIC_POSTHOG_KEY=
NEXT_PUBLIC_POSTHOG_HERO_AB=
NEXT_PUBLIC_POSTHOG_ONBOARDING_SURVEY_ID=
POSTHOG_API_SECRET=
POSTHOG_PROJECT_ID=

# Marketing emails
RESEND_API_KEY=
LOOPS_API_SECRET=

# Crisp support chat
NEXT_PUBLIC_CRISP_WEBSITE_ID=

# Sanity config for blog
NEXT_PUBLIC_SANITY_PROJECT_ID=
NEXT_PUBLIC_SANITY_DATASET="production"
